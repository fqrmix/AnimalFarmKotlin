import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

class PenTest {

    @Test
    fun testPenGetType() {
        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        val penType = testPen.getType()
        assertEquals("Cat", penType)
    }

    @Test
    fun testPenAddAnimal() {
        val testAnimalsList  = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )

        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        val currentList = testPen.addAnimal(Cat("testNewCat"))
        assertEquals(
            mutableListOf("testBarsik", "testPersik", "testVasya", "testNewCat"),
            currentList
        )
    }

    @Test
    fun testPenAddIncorrectAnimal() {
        var passed = false
        val testAnimalsList  = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        try {
            testPen.addAnimal(Dog("testNewCat"))
        } catch (e: Exception) {
            passed = true
        }
        assertEquals(true, passed)
    }

    @Test
    fun testPenGetAnimalsInside() {

        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )

        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        assertEquals(testAnimalsList, testPen.getAnimalsInside())
    }

    @Test
    fun testPenRemoveAnimal() {
        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        assertEquals(
            mutableListOf("testPersik", "testVasya"),
            testAnimalsList.find {
                it.getName() == "testBarsik"
            }?.let {
                testPen.removeAnimal(it)
            }
        )
    }
}