import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.assertThrows
import org.junit.jupiter.api.Test


class PenTest {

    @Test
    fun testPenGetType() {
        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        val penType = testPen.getType()
        assertEquals("Cat", penType)
    }

    @Test
    fun testPenAddAnimal() {
        val testAnimalsList  = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )

        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        val currentList = testPen.addItem(Cat("testNewCat"))
        assertEquals(
            mutableListOf("testBarsik", "testPersik", "testVasya", "testNewCat"),
            currentList.map { it.getName() }
        )
    }

    @Test
    fun testPenAddIncorrectAnimal() {
        val testAnimalsList  = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )

        assertThrows<Exception> {
            testPen.addItem(Dog("testNewDog"))
        }

    }

    @Test
    fun testPenGetAnimalsInside() {

        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )

        val testPen = Pen(
            "Cat",
            testAnimalsList
        )
        assertEquals(testAnimalsList, testPen.getItems())
    }

    @Test
    fun testPenRemoveAnimal() {
        val testAnimalsList = AnimalList(
            Cat("testBarsik"),
            Cat("testPersik"),
            Cat("testVasya")
        )
        val testPen = Pen(
            "Cat",
            testAnimalsList
        )

        val removedAnimal = testAnimalsList.find {
            it.getName() == "testBarsik"
        }

        assertNotNull(removedAnimal)
        testPen.removeItem(removedAnimal!!)
        assertFalse(testAnimalsList.contains(removedAnimal))
    }
}